local args = {...}

if #args > 0 then
	if args[1] == "theme" then
		local function setWindowTheme(theme)
			if theme ~= LyqydOS.window.theme and window.themes[theme] then
				local oldTheme = LyqydOS.window.theme
				LyqydOS.window.theme = theme
				for pID, proc in pairs(process.list) do
					if proc and proc.windows then
						for i, win in ipairs(proc.windows) do
							if win.theme == oldTheme then
								win:setTheme(LyqydOS.window.theme)
							end
						end
					end
				end
			end
		end
		local function setDesktopTheme(theme)
			if theme ~= LyqydOS.desktop.theme then
				if process.eventHooks.redraw then
					local dProc = process.list[process.eventHooks.redraw]
					dProc:queue("set_property", "theme", theme)
					local event
					while true do
						event = {os.pullEvent()}
						if event[1] == "property_changed" then
							LyqydOS.desktop.theme = theme
							break
						elseif event[1] == "property_refused" then
							break
						end
					end
				end
			end
		end
		if #args == 3 then
			--check if second arg is "window" or "desktop" to specify *which* theme to set.
			if args[2] == "desktop" then
				setDesktopTheme(args[3])
			elseif args[2] == "window" then
				setWindowTheme(args[3])
			end
		else
			--try both!
			setWindowTheme(args[2])
			setDesktopTheme(args[2])
		end
	elseif args[1] == "background" then
		local dProc = process.getFromName("desktop")
		if dProc then
			local color = colors[args[2]] or colours[args[2]]
			local image = args[3] and shell.resolve(args[3])
			if color then
				dProc:queue("set_property", "background", color, image)
			else
				error("Invalid color specified")
			end
		else
			error("No desktop found")
		end
	end
end
